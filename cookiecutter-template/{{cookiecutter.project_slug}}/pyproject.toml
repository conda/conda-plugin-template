[build-system]
requires = ["setuptools>=61.0", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "{{cookiecutter.project_slug}}"
version = "0.1.0"
description = "{{cookiecutter.project_description}}"
requires-python = ">=3.8"
classifiers = [
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy"
]
dependencies = [
  "conda",
]

[project.entry-points.conda]
{{cookiecutter.project_slug}} = "{{cookiecutter.package_name}}.hooks"

[tool.setuptools]
packages = ["{{cookiecutter.package_name}}"]

{% if cookiecutter.use_pixi %}
[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "osx-64", "linux-64", "win-64"]

# Dependencies
[tool.pixi.dependencies]
conda = "*"

[tool.pixi.feature.dev.dependencies]
darker = "*"
flake8 = "*"
mypy = "*"
pyupgrade = "*"
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"

[tool.pixi.pypi-dependencies]
{{cookiecutter.package_name}} = { path = ".", editable = true }

[tool.pixi.environments]
dev = ["dev"]

[tool.pixi.target.unix.activation]
env = { CONDA_EXE = "$CONDA_PREFIX/condabin/conda" }

[tool.pixi.target.win.activation]
env = { CONDA_EXE = "%CONDA_PREFIX%\\condabin\\conda" }

[tool.pixi.tasks]
test = "pytest --doctest-modules"
testcov = "pytest --cov={{cookiecutter.package_name}} --cov-report=xml --doctest-modules"
testhtml = "pytest --cov={{cookiecutter.package_name}} --cov-report=html --doctest-modules"

{% endif %}